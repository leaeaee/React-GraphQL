{"ast":null,"code":"var _jsxFileName = \"/Users/leavidovic/Desktop/web-shop/frontend/src/pages/AuthPage.jsx\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport AuthContext from '../context/auth-context';\n\nclass AuthPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true,\n      ordersProducts: [],\n      ordersList: []\n    };\n\n    this.switchModeHandler = () => {\n      this.setState(prevState => {\n        return {\n          isLogin: !prevState.isLogin\n        };\n      });\n    };\n\n    this.submitHandler = product => {\n      product.preventDefault();\n      const email = this.emailEl.current.value;\n      const password = this.passwordEl.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = this.state.isLogin ? {\n        query: \"\\n          query {\\n            login(email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\") {\\n              userId\\n              token\\n              tokenExpiration\\n              isAdmin\\n            }\\n          }\\n      \")\n      } : {\n        query: \"\\n          mutation {\\n            createUser(email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\") {\\n              email\\n              password\\n              isAdmin\\n            }\\n          }\\n        \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      }).then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(resData.data.login.token, resData.data.login.userId, resData.data.login.tokenExpiration, resData.data.login.isAdmin);\n        }\n      }).catch(err => console.log(err));\n    };\n\n    this.fetchOrders = () => {\n      this.setState({\n        isLoading: true\n      });\n      const requestBody = {\n        query: \"\\n          query {\\n            orders {\\n             products {\\n               title\\n               price\\n               description\\n               date\\n             }\\n            }\\n          }\\n        \"\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      }).then(resData => {\n        console.log('ORDERS on profile', resData.data);\n        const ordersList = resData.data.orders.filter(order => order !== null);\n        const ordersProducts = ordersList.map(order => order.products);\n        this.setState({\n          ordersList: ordersList,\n          isLoading: false,\n          ordersProducts\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchOrders();\n  }\n\n  render() {\n    return React.createElement(AuthContext.Consumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, context => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, !context.token && React.createElement(\"form\", {\n        className: \"auth-form\",\n        onSubmit: this.submitHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"E-Mail\"), React.createElement(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        ref: this.emailEl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        ref: this.passwordEl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.switchModeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Switch to \", this.state.isLogin ? 'Signup' : 'Login'))), React.createElement(\"div\", {\n        className: \"orders__list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, console.log('Iz AuthPage-a ordersList', this.state.ordersList), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"orders__title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Orders list:\")), this.state.ordersList.map((order, id) => order.products.map(orderProduct => {\n        return React.createElement(\"li\", {\n          className: \"orders__item\",\n          key: orderProduct.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }, \"Order Number \", id + 1, React.createElement(\"div\", {\n          className: \"orders__list-data\",\n          key: orderProduct.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, orderProduct.title, \" - $\", orderProduct.price));\n      })))));\n    });\n  }\n\n}\n\nAuthPage.contextType = AuthContext;\nexport default AuthPage;","map":{"version":3,"sources":["/Users/leavidovic/Desktop/web-shop/frontend/src/pages/AuthPage.jsx"],"names":["React","Component","AuthContext","AuthPage","constructor","props","state","isLogin","ordersProducts","ordersList","switchModeHandler","setState","prevState","submitHandler","product","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","login","token","context","userId","tokenExpiration","isAdmin","catch","err","console","log","fetchOrders","isLoading","Authorization","orders","filter","order","map","products","createRef","componentDidMount","render","id","orderProduct","title","price","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,YAAP;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAS/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SARnBC,KAQmB,GARX;AACNC,MAAAA,OAAO,EAAE,IADH;AAENC,MAAAA,cAAc,EAAE,EAFV;AAGNC,MAAAA,UAAU,EAAE;AAHN,KAQW;;AAAA,SASnBC,iBATmB,GASC,MAAM;AACxB,WAAKC,QAAL,CAAcC,SAAS,IAAI;AACzB,eAAO;AAAEL,UAAAA,OAAO,EAAE,CAACK,SAAS,CAACL;AAAtB,SAAP;AACD,OAFD;AAGD,KAbkB;;AAAA,SAenBM,aAfmB,GAeHC,OAAO,IAAI;AACzBA,MAAAA,OAAO,CAACC,cAAR;AAEA,YAAMC,KAAK,GAAG,KAAKC,OAAL,CAAaC,OAAb,CAAqBC,KAAnC;AACA,YAAMC,QAAQ,GAAG,KAAKC,UAAL,CAAgBH,OAAhB,CAAwBC,KAAzC;;AAEA,UAAIH,KAAK,CAACM,IAAN,GAAaC,MAAb,KAAwB,CAAxB,IAA6BH,QAAQ,CAACE,IAAT,GAAgBC,MAAhB,KAA2B,CAA5D,EAA+D;AAC7D;AACD;;AAED,UAAIC,WAAW,GAAG,KAAKlB,KAAL,CAAWC,OAAX,GACd;AACEkB,QAAAA,KAAK,4DAEaT,KAFb,6BAEmCI,QAFnC;AADP,OADc,GAad;AACEK,QAAAA,KAAK,oEAEkBT,KAFlB,6BAEwCI,QAFxC;AADP,OAbJ;AAyBAM,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAF+B;AAGrCO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAH4B,OAAlC,CAAL,CAOGC,IAPH,CAOQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C,MAAM,IAAIC,KAAJ,CAAU,SAAV,CAAN;AAC9C,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAVH,EAWGJ,IAXH,CAWQK,OAAO,IAAI;AACf,YAAIA,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBC,KAAvB,EAA8B;AAC5B,eAAKC,OAAL,CAAaF,KAAb,CACEF,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBC,KADrB,EAEEH,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBG,MAFrB,EAGEL,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBI,eAHrB,EAIEN,OAAO,CAACC,IAAR,CAAaC,KAAb,CAAmBK,OAJrB;AAMD;AACF,OApBH,EAqBGC,KArBH,CAqBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CArBhB;AAsBD,KAxEkB;;AAAA,SAyEnBG,WAzEmB,GAyEL,MAAM;AAClB,WAAKtC,QAAL,CAAc;AAAEuC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,YAAM1B,WAAW,GAAG;AAClBC,QAAAA,KAAK;AADa,OAApB;AAeAC,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAF+B;AAGrCO,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPoB,UAAAA,aAAa,EAAE,YAAY,KAAKV,OAAL,CAAaD;AAFjC;AAH4B,OAAlC,CAAL,CAQGR,IARH,CAQQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAf,IAAsBD,GAAG,CAACC,MAAJ,KAAe,GAAzC,EAA8C,MAAM,IAAIC,KAAJ,CAAU,SAAV,CAAN;AAC9C,eAAOF,GAAG,CAACG,IAAJ,EAAP;AACD,OAXH,EAYGJ,IAZH,CAYQK,OAAO,IAAI;AACfU,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCX,OAAO,CAACC,IAAzC;AACA,cAAM7B,UAAU,GAAG4B,OAAO,CAACC,IAAR,CAAac,MAAb,CAAoBC,MAApB,CAA2BC,KAAK,IAAIA,KAAK,KAAK,IAA9C,CAAnB;AACA,cAAM9C,cAAc,GAAGC,UAAU,CAAC8C,GAAX,CAAeD,KAAK,IAAIA,KAAK,CAACE,QAA9B,CAAvB;AACA,aAAK7C,QAAL,CAAc;AAAEF,UAAAA,UAAU,EAAEA,UAAd;AAA0ByC,UAAAA,SAAS,EAAE,KAArC;AAA4C1C,UAAAA;AAA5C,SAAd;AACD,OAjBH,EAkBGqC,KAlBH,CAkBSC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKnC,QAAL,CAAc;AAAEuC,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OArBH;AAsBD,KAhHkB;;AAEjB,SAAKjC,OAAL,GAAejB,KAAK,CAACyD,SAAN,EAAf;AACA,SAAKpC,UAAL,GAAkBrB,KAAK,CAACyD,SAAN,EAAlB;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,WAAL;AACD;;AA2GDU,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,WAAD,CAAa,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGlB,OAAO,IAAI;AACV,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACA,OAAO,CAACD,KAAT,IACC;AAAM,QAAA,SAAS,EAAC,WAAhB;AAA4B,QAAA,QAAQ,EAAE,KAAK3B,aAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,EAAE,EAAC,OAAvB;AAA+B,QAAA,GAAG,EAAE,KAAKI,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAE,KAAKI,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EASE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKX,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACa,KAAKJ,KAAL,CAAWC,OAAX,GAAqB,QAArB,GAAgC,OAD7C,CAFF,CATF,CAFJ,EAoBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGwC,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwC,KAAK1C,KAAL,CAAWG,UAAnD,CADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA/B,CADA,EAEG,KAAKH,KAAL,CAAWG,UAAX,CAAsB8C,GAAtB,CAA0B,CAACD,KAAD,EAAQM,EAAR,KACzBN,KAAK,CAACE,QAAN,CAAeD,GAAf,CAAmBM,YAAY,IAAI;AACjC,eACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAA6B,UAAA,GAAG,EAAEA,YAAY,CAACC,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACgBF,EAAE,GAAG,CADrB,EAEE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAmC,UAAA,GAAG,EAAEC,YAAY,CAACD,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,YAAY,CAACC,KADhB,UAC2BD,YAAY,CAACE,KADxC,CAFF,CADF;AAQD,OATD,CADD,CAFH,CAFF,CApBF,CADF;AAyCD,KA3CH,CADF;AA+CD;;AA3K8B;;AAA3B5D,Q,CAOG6D,W,GAAc9D,W;AAuKvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport AuthContext from '../context/auth-context';\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true,\n    ordersProducts: [],\n    ordersList: []\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n  componentDidMount() {\n    this.fetchOrders();\n  }\n\n  switchModeHandler = () => {\n    this.setState(prevState => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = product => {\n    product.preventDefault();\n\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = this.state.isLogin\n      ? {\n          query: `\n          query {\n            login(email: \"${email}\", password: \"${password}\") {\n              userId\n              token\n              tokenExpiration\n              isAdmin\n            }\n          }\n      `\n        }\n      : {\n          query: `\n          mutation {\n            createUser(email: \"${email}\", password: \"${password}\") {\n              email\n              password\n              isAdmin\n            }\n          }\n        `\n        };\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      })\n      .then(resData => {\n        if (resData.data.login.token) {\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExpiration,\n            resData.data.login.isAdmin\n          );\n        }\n      })\n      .catch(err => console.log(err));\n  };\n  fetchOrders = () => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            orders {\n             products {\n               title\n               price\n               description\n               date\n             }\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      })\n      .then(resData => {\n        console.log('ORDERS on profile', resData.data);\n        const ordersList = resData.data.orders.filter(order => order !== null);\n        const ordersProducts = ordersList.map(order => order.products);\n        this.setState({ ordersList: ordersList, isLoading: false, ordersProducts });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  render() {\n    return (\n      <AuthContext.Consumer>\n        {context => {\n          return (\n            <div>\n              {!context.token && (\n                <form className=\"auth-form\" onSubmit={this.submitHandler}>\n                  <div className=\"form-control\">\n                    <label htmlFor=\"email\">E-Mail</label>\n                    <input type=\"email\" id=\"email\" ref={this.emailEl} />\n                  </div>\n                  <div className=\"form-control\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n                  </div>\n                  <div className=\"form-actions\">\n                    <button type=\"submit\">Submit</button>\n                    <button type=\"button\" onClick={this.switchModeHandler}>\n                      Switch to {this.state.isLogin ? 'Signup' : 'Login'}\n                      {/* klikom na ovaj btn možemo promjeniti hoćemo li se Signup-at ili Login-at*/}\n                    </button>\n                  </div>\n                </form>\n              )}\n              <div className=\"orders__list\">\n                {console.log('Iz AuthPage-a ordersList', this.state.ordersList)}\n                <ul>\n                <div className=\"orders__title\"><strong>Orders list:</strong></div>\n                  {this.state.ordersList.map((order, id) =>\n                    order.products.map(orderProduct => {\n                      return (\n                        <li className=\"orders__item\" key={orderProduct.title}>\n                          Order Number {id + 1}\n                          <div className=\"orders__list-data\" key={orderProduct.id}>\n                            {orderProduct.title} - ${orderProduct.price}\n                          </div>\n                        </li>\n                      );\n                    })\n                  )}\n                </ul>\n              </div>\n            </div>\n          );\n        }}\n      </AuthContext.Consumer>\n    );\n  }\n}\n\nexport default AuthPage;\n"]},"metadata":{},"sourceType":"module"}