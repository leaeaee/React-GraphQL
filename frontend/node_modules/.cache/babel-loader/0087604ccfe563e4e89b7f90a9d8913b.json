{"ast":null,"code":"var _jsxFileName = \"/Users/leavidovic/Desktop/web-shop/frontend/src/pages/HomePage.jsx\";\nimport React, { Component } from 'react';\nimport ProductListing from '../features/product-listing/ProductListing';\nimport Modal from '../features/modal/Modal';\nimport Backdrop from '../Backdrop/Backdrop';\nimport AuthContext from '../context/auth-context';\nimport Spinner from '../Spinner/Spinner';\nimport '../features/CreateProduct/CreateProduct.css';\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false,\n      isLoading: false,\n      products: [],\n      selectedProduct: null,\n      size: ['S', 'M', 'L', 'XL'],\n      selectedSize: '',\n      clickedProduct: '',\n      favoritesId: ''\n    };\n    this.isActive = true;\n\n    this.modalCancelHandler = () => this.setState({\n      selectedProduct: null,\n      creating: false\n    });\n\n    this.addToCartHandler = () => {\n      if (!this.context.token) {\n        this.setState({\n          selectedProduct: null\n        });\n        return;\n      }\n\n      if (this.state.selectedSize === '') {\n        alert('Select size!!');\n        return;\n      }\n\n      console.log('selectedProduct', this.state.selectedProduct);\n      const requestBody = {\n        query: \"\\n          mutation {\\n            addToCart(productId: \\\"\".concat(this.state.selectedProduct._id, \"\\\", size: \\\"\").concat(this.state.selectedSize, \"\\\"){\\n              _id\\n              product {\\n                title\\n                description\\n                price\\n              }\\n              user {\\n                email\\n                password\\n                isAdmin\\n              }\\n              size\\n            }\\n          }\\n        \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      }).then(resData => {\n        console.log('Add to cart data:', resData);\n        this.setState({\n          selectedProduct: false,\n          selectedSize: ''\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.startCreateProductHandler = () => this.setState({\n      creating: true\n    });\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const title = this.titleElRef.current.value;\n      const description = this.descriptionElRef.current.value;\n      const price = +this.priceElRef.current.value;\n      const date = this.dateElRef.current.value;\n      if (title.trim().length === 0 || price <= 0 || date.trim().length === 0 || description.trim().length === 0) return;\n      const requestBody = {\n        query: \"\\n        mutation {\\n          createProduct(productData: { \\n            title: \\\"\".concat(title, \"\\\",\\n            description: \\\"\").concat(description, \"\\\",\\n            price: \").concat(price, \",\\n            date: \\\"\").concat(date, \"\\\"\\n          }) {\\n              _id\\n              title\\n              description\\n              price\\n              date\\n            }\\n        }\")\n      };\n      const token = this.context.token;\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        this.setState(prevState => {\n          const updatedProducts = [...prevState.products];\n          updatedProducts.push({\n            _id: resData.data.createProduct._id,\n            title: resData.data.createProduct.title,\n            description: resData.data.createProduct.description,\n            date: resData.data.createProduct.date,\n            price: resData.data.createProduct.price,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return {\n            products: updatedProducts\n          };\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.deleteProduct = productId => {\n      this.setState({\n        isLoading: true\n      });\n      const requestBody = {\n        query: \"\\n          mutation {\\n            deleteProduct(productId: \\\"\".concat(productId, \"\\\"){\\n              _id\\n            }\\n          }\\n        \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      }).then(resData => {\n        this.setState(prevStat => {\n          const updatedProducts = prevStat.products.filter(product => product._id !== productId);\n          return {\n            products: updatedProducts,\n            isLoading: false\n          };\n        });\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.addToCartTrigger = productId => {\n      this.setState(prevState => {\n        const selectedProduct = prevState.products.find(p => p._id === productId);\n        return {\n          selectedProduct: selectedProduct\n        };\n      });\n    };\n\n    this.addToFavoritesHandler = productId => {\n      if (!this.context.token) return;\n      const requestBody = {\n        query: \"\\n          mutation {\\n            addToFavorites(productId: \\\"\".concat(productId, \"\\\"){\\n              _id\\n            }\\n          }\\n        \")\n      };\n      fetch('http://localhost:8080/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + this.context.token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      }).then(resData => {\n        this.setState({\n          favoritesId: productId\n        });\n        console.log('Favorites', resData);\n      }).catch(err => {\n        console.log(err);\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.titleElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  handleClick(size) {\n    let newSize = '';\n    if (this.state.selectedSize !== size) newSize = size;\n    this.setState({\n      selectedSize: newSize\n    });\n  }\n\n  fetchProducts() {\n    this.setState({\n      isLoading: true\n    });\n    const requestBody = {\n      query: \"\\n          query {\\n            products {\\n              _id\\n              title\\n              description\\n              date\\n              price\\n            }\\n          }\\n        \"\n    };\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n      return res.json();\n    }).then(resData => {\n      let products;\n      if (resData.data && resData.data.products) products = resData.data.products;\n      products && this.isActive ? this.setState({\n        products: products,\n        isLoading: false\n      }) : this.setState({\n        isLoading: true\n      });\n    }).catch(err => {\n      console.log(err);\n      if (this.isActive) this.setState({\n        isLoading: false\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }, this.context.token && this.context.isAdmin && React.createElement(\"div\", {\n      className: \"products-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, \"Share your own Products!\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.startCreateProductHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, \"Create Product\")), this.state.creating && React.createElement(Backdrop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }), this.state.creating && React.createElement(Modal, {\n      title: \"Add Product\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      confirmText: \"Confirm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      ref: this.titleElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"price\",\n      ref: this.priceElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dateElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      rows: \"3\",\n      ref: this.descriptionElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    })))), this.state.selectedProduct && React.createElement(Backdrop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }), this.state.selectedProduct && React.createElement(Modal, {\n      title: this.state.selectedProduct.title,\n      canCancel: true,\n      canConfirm: this.state.selectedSize.length > 0 ? true : false,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.addToCartHandler,\n      confirmText: this.context.token ? 'Add to Cart' : 'Confirm',\n      selectedSize: this.state.selectedSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, \"Select a size:\"), React.createElement(\"ul\", {\n      className: \"size\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, this.state.size.map(oneSize => React.createElement(\"li\", {\n      className: this.state.selectedSize === oneSize ? 'size-selected' : '',\n      key: oneSize,\n      onClick: () => this.handleClick(oneSize),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, oneSize)))), React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"$\", this.state.selectedProduct.price), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, this.state.selectedProduct.description)), this.state.isLoading ? React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }) : React.createElement(ProductListing, {\n      products: this.state.products,\n      authUserId: this.context.userId,\n      addToCartTrigger: this.addToCartTrigger,\n      deleteProduct: this.deleteProduct,\n      addToFavorites: this.addToFavoritesHandler,\n      favoritesId: this.state.favoritesId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }));\n  }\n\n}\n\nHomePage.contextType = AuthContext;\nexport default HomePage;","map":{"version":3,"sources":["/Users/leavidovic/Desktop/web-shop/frontend/src/pages/HomePage.jsx"],"names":["React","Component","ProductListing","Modal","Backdrop","AuthContext","Spinner","HomePage","constructor","props","state","creating","isLoading","products","selectedProduct","size","selectedSize","clickedProduct","favoritesId","isActive","modalCancelHandler","setState","addToCartHandler","context","token","alert","console","log","requestBody","query","_id","fetch","method","body","JSON","stringify","headers","Authorization","then","res","status","Error","json","resData","catch","err","startCreateProductHandler","modalConfirmHandler","title","titleElRef","current","value","description","descriptionElRef","price","priceElRef","date","dateElRef","trim","length","prevState","updatedProducts","push","data","createProduct","creator","userId","deleteProduct","productId","prevStat","filter","product","addToCartTrigger","find","p","addToFavoritesHandler","createRef","componentDidMount","fetchProducts","handleClick","newSize","componentWillUnmount","render","isAdmin","map","oneSize","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport ProductListing from '../features/product-listing/ProductListing';\nimport Modal from '../features/modal/Modal';\nimport Backdrop from '../Backdrop/Backdrop';\nimport AuthContext from '../context/auth-context';\nimport Spinner from '../Spinner/Spinner';\nimport '../features/CreateProduct/CreateProduct.css';\n\nclass HomePage extends Component {\n  state = {\n    creating: false,\n    isLoading: false,\n    products: [],\n    selectedProduct: null,\n    size: ['S', 'M', 'L', 'XL'],\n    selectedSize: '',\n    clickedProduct: '',\n    favoritesId: ''\n  };\n\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleElRef = React.createRef();\n    this.priceElRef = React.createRef();\n    this.dateElRef = React.createRef();\n    this.descriptionElRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchProducts();\n  }\n\n  handleClick(size) {\n    let newSize = '';\n    if (this.state.selectedSize !== size) newSize = size;\n    this.setState({ selectedSize: newSize });\n  }\n\n  modalCancelHandler = () => this.setState({ selectedProduct: null, creating: false });\n\n  addToCartHandler = () => {\n    if (!this.context.token) {\n      this.setState({ selectedProduct: null });\n      return;\n    }\n    if (this.state.selectedSize === '') {\n      alert('Select size!!');\n      return;\n    }\n    console.log('selectedProduct', this.state.selectedProduct);\n    const requestBody = {\n      query: `\n          mutation {\n            addToCart(productId: \"${this.state.selectedProduct._id}\", size: \"${this.state.selectedSize}\"){\n              _id\n              product {\n                title\n                description\n                price\n              }\n              user {\n                email\n                password\n                isAdmin\n              }\n              size\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201)\n          throw new Error('Failed!');\n        return res.json();\n      })\n      .then(resData => {\n        console.log('Add to cart data:', resData);\n        this.setState({ selectedProduct: false, selectedSize: '' });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  fetchProducts() {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          query {\n            products {\n              _id\n              title\n              description\n              date\n              price\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      })\n      .then(resData => {\n        let products;\n        if (resData.data && resData.data.products) products = resData.data.products;\n\n        products && this.isActive\n          ? this.setState({ products: products, isLoading: false })\n          : this.setState({ isLoading: true });\n      })\n      .catch(err => {\n        console.log(err);\n        if (this.isActive) this.setState({ isLoading: false });\n      });\n  }\n\n  startCreateProductHandler = () => this.setState({ creating: true });\n\n  modalConfirmHandler = () => {\n    this.setState({ creating: false });\n    const title = this.titleElRef.current.value;\n    const description = this.descriptionElRef.current.value;\n    const price = +this.priceElRef.current.value;\n    const date = this.dateElRef.current.value;\n\n    if (title.trim().length === 0 || price <= 0 || date.trim().length === 0 || description.trim().length === 0) return;\n\n    const requestBody = {\n      query: `\n        mutation {\n          createProduct(productData: { \n            title: \"${title}\",\n            description: \"${description}\",\n            price: ${price},\n            date: \"${date}\"\n          }) {\n              _id\n              title\n              description\n              price\n              date\n            }\n        }`\n    };\n\n    const token = this.context.token;\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevState => {\n          const updatedProducts = [...prevState.products];\n          updatedProducts.push({\n            _id: resData.data.createProduct._id,\n            title: resData.data.createProduct.title,\n            description: resData.data.createProduct.description,\n            date: resData.data.createProduct.date,\n            price: resData.data.createProduct.price,\n            creator: {\n              _id: this.context.userId\n            }\n          });\n          return { products: updatedProducts };\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteProduct = productId => {\n    this.setState({ isLoading: true });\n    const requestBody = {\n      query: `\n          mutation {\n            deleteProduct(productId: \"${productId}\"){\n              _id\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      })\n      .then(resData => {\n        this.setState(prevStat => {\n          const updatedProducts = prevStat.products.filter(product => product._id !== productId);\n          return { products: updatedProducts, isLoading: false };\n        });\n      })\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  addToCartTrigger = productId => {\n    this.setState(prevState => {\n      const selectedProduct = prevState.products.find(p => p._id === productId);\n      return { selectedProduct: selectedProduct };\n    });\n  };\n\n  addToFavoritesHandler = productId => {\n    if (!this.context.token) return;\n    const requestBody = {\n      query: `\n          mutation {\n            addToFavorites(productId: \"${productId}\"){\n              _id\n            }\n          }\n        `\n    };\n\n    fetch('http://localhost:8080/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: 'Bearer ' + this.context.token\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) throw new Error('Failed!');\n        return res.json();\n      })\n      .then(resData => {this.setState({ favoritesId: productId })\n    console.log('Favorites', resData)})\n      .catch(err => {\n        console.log(err);\n        this.setState({ isLoading: false });\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.context.token && this.context.isAdmin && (\n          <div className=\"products-control\">\n            <p>Share your own Products!</p>\n            <button className=\"btn\" onClick={this.startCreateProductHandler}>\n              Create Product\n            </button>\n          </div>\n        )}\n        {this.state.creating && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Add Product\"\n            canCancel\n            canConfirm\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.modalConfirmHandler}\n            confirmText=\"Confirm\"\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea id=\"description\" rows=\"3\" ref={this.descriptionElRef} />\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedProduct && <Backdrop />}\n        {this.state.selectedProduct && (\n          <Modal\n            title={this.state.selectedProduct.title}\n            canCancel\n            canConfirm={this.state.selectedSize.length > 0 ? true : false}\n            onCancel={this.modalCancelHandler}\n            onConfirm={this.addToCartHandler}\n            confirmText={this.context.token ? 'Add to Cart' : 'Confirm'}\n            selectedSize={this.state.selectedSize}\n          >\n            <h3>Select a size:</h3>\n            <ul className=\"size\">\n              {this.state.size.map(oneSize => (\n                <li\n                  className={this.state.selectedSize === oneSize ? 'size-selected' : ''}\n                  key={oneSize}\n                  onClick={() => this.handleClick(oneSize)}\n                >\n                  <strong>{oneSize}</strong>\n                </li>\n              ))}\n            </ul>\n            <h5>\n              ${this.state.selectedProduct.price}\n            </h5>\n            <p>{this.state.selectedProduct.description}</p>\n          </Modal>\n        )}\n        {this.state.isLoading ? (\n          <Spinner />\n        ) : (\n          <ProductListing\n            products={this.state.products}\n            authUserId={this.context.userId}\n            addToCartTrigger={this.addToCartTrigger}\n            deleteProduct={this.deleteProduct}\n            addToFavorites={this.addToFavoritesHandler}\n            favoritesId={this.state.favoritesId}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}